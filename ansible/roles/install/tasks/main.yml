---
- name: Verify that our ansible version is 2.10 or higher
  ansible.builtin.assert:
    that: "{{ ansible_version.full is version('2.10', '>=') }}"

- block:
  - name: Update and upgrade apt packages
    apt:
      autoremove: true
      autoclean: true
      upgrade: 'yes' 
      update_cache: true
      cache_valid_time: 86400 # 1 day
        #    become: true
    async: 600
    poll: 0
    register: update_and_upgrade_async

  - name: Wait until apt-get update/upgrade is complete (delay=5)
    ansible.builtin.async_status:
      jid: '{{ update_and_upgrade_async.ansible_job_id }}'
    register: update_and_upgrade_async_result
    until: update_and_upgrade_async_result.finished
    retries: 120
    delay: 5

  # TODO
  - name: Output 
    debug:
      var: update_and_upgrade_async_result

  - name: Write the output of apt-get update/upgrade to /tmp/apt-get-output.log if changes ocurred
    copy:
      content: "{{ update_and_upgrade.stdout }}"
      dest: "/tmp/apt-get-output.log"
    when: update_and_upgrade_async_result.changed

  - name: Install the package "curl"
    ansible.builtin.apt:
      name: curl 

  - name: Install the package "wget"
    ansible.builtin.apt:
      name: wget 

  - name: Install the package "snapd"
    ansible.builtin.apt:
      name: snapd 

  - name: Install the package "openssl"
    ansible.builtin.apt:
      name: openssl 

  - name: Install the package "git"
    ansible.builtin.apt:
      name: git 

  - name: Install the package "vim"
    ansible.builtin.apt:
      name: vim 

  - name: Install the package "neovim"
    ansible.builtin.apt:
      name: neovim 

  - name: Install the package "tmux"
    ansible.builtin.apt:
      name: tmux 

  - name: Install the package "sqlite3"
    ansible.builtin.apt:
      name: sqlite3 

  - name: Install docker dependencies, namely "ca-certificates", and "gnupg"
    ansible.builtin.apt:
      pkg:
        - ca-certificates
        - gnupg

  - name: Add GPG apt Key for "docker"
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add "docker" into sources repository sources list
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu focal stable
      state: present

  # https://docs.docker.com/engine/install/ubuntu/
  - name: Update apt and install (docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin
    apt:
      pkg: 
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      state: latest
      update_cache: true

  - name: Install "Docker Desktop"
    ansible.builtin.apt:
      deb: https://desktop.docker.com/linux/main/amd64/docker-desktop-4.23.0-amd64.deb

  - name: Add apt signing key for "google chrome"
    ansible.builtin.apt_key:
      url: https://dl.google.com/linux/linux_signing_key.pub
  
  - name: Add "google chrome" into repository sources list using specified filename
    ansible.builtin.apt_repository:
      repo: deb http://dl.google.com/linux/chrome/deb/ stable main
      state: present
      filename: google-chrome

  - name: Install "google chrome"
    ansible.builtin.apt:
      name: "google-chrome-stable"
      state: latest
      update_cache: true

  - name: Install "discord"
    become: true
    shell: snap install discord 

  - name: Install "telegram-desktop"
    become: true
    shell: snap install telegram-desktop

  # r.i.p. Atom
  - name: Install "atom"
    become: true
    shell: snap install atom

  become: true
